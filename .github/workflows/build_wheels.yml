name: Build Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering


jobs:
  # Build wheels on Linux
  build_linux_wheels:
    name: Build python ${{ matrix.cibw_python }} ${{matrix.cibw_arch}} wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cibw_python: ["cp312-*", "cp313-*"]
        cibw_arch: ["x86_64", "aarch64"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cibw_python }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Install build dependencies
        shell: bash
        run: |
          python -m pip install numpy>=2.0.0 meson-python

      - name: Build the wheel
        shell: bash
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_arch }}
          CIBW_SKIP: "*-musllinux*"
          CIBW_TEST_SKIP: "*"

      - name: Upload the wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
          path: ./dist/*.whl


  # Build wheels on macOS
  build_osx_wheels:
    name: Build python ${{ matrix.cibw_python }} ${{matrix.cibw_arch}} wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-latest]
        cibw_python: ["cp312-*", "cp313-*"]
        include:
          - os: macos-latest
            cibw_arch: x86_64
          - os: macos-14
            cibw_arch: arm64
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cibw_python }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Install build dependencies
        run: |
          python -m pip install numpy>=2.0.0 meson-python

      - name: Build the wheel
        shell: bash
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_MACOS: ${{ matrix.cibw_arch }}
          CIBW_TEST_SKIP: "*"
      
      - name: Upload the wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
          path: ./dist/*.whl
  

  # Build wheels on Windows
  build_windows_wheels:
    name: Build python ${{ matrix.cibw_python }} ${{matrix.cibw_arch}} wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest]
        cibw_python: ["cp312-*", "cp313-*"]
        cibw_arch: ["AMD64"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cibw_python }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Install build dependencies
        run: |
          python -m pip install numpy>=2.0.0 meson-python

      - name: Build the wheel
        shell: bash
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.cibw_arch }}

      - name: Upload the wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
          path: ./dist/*.whl
