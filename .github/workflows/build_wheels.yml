name: Build Wheels
run-name: ${{ github.event_name == 'workflow_dispatch' && 'Manual Build Wheels' || github.ref_type == 'tag' && format('Build Wheels for tag {0}', github.ref_name) || format('Build Wheels for {0}', github.ref_name) }}

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering


jobs:
  # make source dist
  make_sdist:
    name: Make source dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install build

      - name: Make source dist
        run: |
          python -m build --sdist

      - name: Get version info
        run: |
          # Set version suffix based on tag or branch
          if [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref }}" == refs/tags/v* ]]; then
            # Extract version from tag (removing the 'v' prefix)
            TAG_VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
            echo "VERSION_SUFFIX=$TAG_VERSION-" >> $GITHUB_ENV
          else
            # Use empty suffix for non-tag builds
            echo "VERSION_SUFFIX=" >> $GITHUB_ENV
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: miscgeom-${{ env.VERSION_SUFFIX }}source
          path: dist/*.tar.gz
  
  build_wheels:
    needs: make_sdist
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ linux-intel, linux-arm, windows, macOS-intel, macOS-arm, iOS, pyodide ]
        include:
          - archs: auto
            platform: auto
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-latest
          - os: windows
            runs-on: windows-latest
          - os: macOS-intel
            runs-on: macos-13
          - os: macOS-arm
            runs-on: macos-latest
            archs: auto, universal2
          - os: iOS
            runs-on: macos-latest
            platform: ios
          - os: pyodide
            runs-on: ubuntu-latest
            platform: pyodide

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_ARCHS: ${{ matrix.archs }}

      - uses: actions/upload-artifact@v4
        with:
          name: miscgeom-${{ matrix.platform }}-${{ matrix.archs }}
          path: dist/*.whl
      


  # publish to pypi
  publish_to_pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - make_sdist
      - build_wheels

    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/miscgeom
    
    permissions:
      id-token: write
    
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: miscgeom-*
          merge-multiple: true
      
      - name: Display downloaded wheels
        run: |
          echo "Downloaded wheels:"
          ls -la dist/
          echo "Total wheels: $(find dist -name '*.whl' | wc -l)"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          skip-existing: true
