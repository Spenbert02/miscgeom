name: Build Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Install build dependencies
        run: |
          python -m pip install numpy>=2.0.0 meson-python
          # On Linux, install additional build dependencies
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential
          fi
        shell: bash

      - name: Build wheels on macOS
        if: runner.os == 'macOS'
        shell: bash
        run: |
          # Get NumPy include path and set CFLAGS
          export CFLAGS="-I$(python -c 'import numpy as np; print(np.get_include())')"
          echo "Using CFLAGS: $CFLAGS"
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BEFORE_BUILD: "pip install numpy>=2.0.0 meson-python"
          CIBW_BUILD_VERBOSITY: 3

      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          NUMPY_INCLUDE=$(python -c 'import numpy as np; print(np.get_include())')
          echo "NUMPY_INCLUDE=$NUMPY_INCLUDE" >> $GITHUB_ENV
          echo "CFLAGS=-I$NUMPY_INCLUDE" >> $GITHUB_ENV
          echo "Using CFLAGS: $CFLAGS"
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BEFORE_BUILD: "pip install numpy>=2.0.0 meson-python"
          CIBW_BUILD_VERBOSITY: 3
      
      - name: Build wheels on Linux
        if: runner.os == 'Linux'
        shell: bash
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BEFORE_BUILD: "pip install numpy>=2.0.0 meson-python"
          CIBW_BUILD_VERBOSITY: 3

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./wheelhouse/*.whl
    
      - name: Upload to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: wheelhouse/
